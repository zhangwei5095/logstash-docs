[[plugins-inputs-tcp]]
=== tcp



Read events over a TCP socket.

Like stdin and file inputs, each event is assumed to be one line of text.

Can either accept connections from clients or connect to a server,
depending on `mode`.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
tcp {
    port => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-tcp-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-tcp-codec>> |<<codec,codec>>|No|`"line"`
| <<plugins-inputs-tcp-host>> |<<string,string>>|No|`"0.0.0.0"`
| <<plugins-inputs-tcp-mode>> |<<string,string>>, one of `["server", "client"]`|No|`"server"`
| <<plugins-inputs-tcp-port>> |<<number,number>>|Yes|
| <<plugins-inputs-tcp-ssl_cert>> |a valid filesystem path|No|
| <<plugins-inputs-tcp-ssl_enable>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-tcp-ssl_extra_chain_certs>> |<<array,array>>|No|`[]`
| <<plugins-inputs-tcp-ssl_key>> |a valid filesystem path|No|
| <<plugins-inputs-tcp-ssl_key_passphrase>> |<<password,password>>|No|`nil`
| <<plugins-inputs-tcp-ssl_verify>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-tcp-tags>> |<<array,array>>|No|
| <<plugins-inputs-tcp-type>> |<<string,string>>|No|
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-tcp-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-tcp-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"line"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-tcp-data_timeout]]
===== `data_timeout`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<number,number>>
  * Default value is `-1`



[[plugins-inputs-tcp-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"0.0.0.0"`

When mode is `server`, the address to listen on.
When mode is `client`, the address to connect to.

[[plugins-inputs-tcp-mode]]
===== `mode` 

  * Value can be any of: `server`, `client`
  * Default value is `"server"`

Mode to operate in. `server` listens for client connections,
`client` connects to a server.

[[plugins-inputs-tcp-port]]
===== `port` 

  * This is a required setting.
  * Value type is <<number,number>>
  * There is no default value for this setting.

When mode is `server`, the port to listen on.
When mode is `client`, the port to connect to.

[[plugins-inputs-tcp-ssl_cacert]]
===== `ssl_cacert`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<path,path>>
  * There is no default value for this setting.

The SSL CA certificate, chainfile or CA path. The system CA path is automatically included.

[[plugins-inputs-tcp-ssl_cert]]
===== `ssl_cert` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

SSL certificate path

[[plugins-inputs-tcp-ssl_enable]]
===== `ssl_enable` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable SSL (must be set for other `ssl_` options to take effect).

[[plugins-inputs-tcp-ssl_extra_chain_certs]]
===== `ssl_extra_chain_certs` 

  * Value type is <<array,array>>
  * Default value is `[]`

An Array of extra X509 certificates to be added to the certificate chain.
Useful when the CA chain is not necessary in the system store.

[[plugins-inputs-tcp-ssl_key]]
===== `ssl_key` 

  * Value type is <<path,path>>
  * There is no default value for this setting.

SSL key path

[[plugins-inputs-tcp-ssl_key_passphrase]]
===== `ssl_key_passphrase` 

  * Value type is <<password,password>>
  * Default value is `nil`

SSL key passphrase

[[plugins-inputs-tcp-ssl_verify]]
===== `ssl_verify` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Verify the identity of the other end of the SSL connection against the CA.
For input, sets the field `sslsubject` to that of the client certificate.

[[plugins-inputs-tcp-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-tcp-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.


