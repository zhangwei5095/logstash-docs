[[plugins-inputs-http_poller]]
=== http_poller



This Logstash input plugin allows you to call an HTTP API, decode the output of it into event(s), and
send them on their merry way. The idea behind this plugins came from a need to read springboot
metrics endpoint, instead of configuring jmx to monitor my java application memory/gc/ etc.

==== Example
Reads from a list of urls and decodes the body of the response with a codec.
The config should look like this:

[source,ruby]
----------------------------------
input {
  http_poller {
    urls => {
      test1 => "http://localhost:9200"
      test2 => {
        # Supports all options supported by ruby's Manticore HTTP client
        method => get
        url => "http://localhost:9200/_cluster/health"
        headers => {
          Accept => "application/json"
        }
        auth => {
          user => "AzureDiamond"
          password => "hunter2"
        }
      }
    }
    request_timeout => 60
    interval => 60
    codec => "json"
    # A hash of request metadata info (timing, response headers, etc.) will be sent here
    metadata_target => "http_poller_metadata"
  }
}

output {
  stdout {
    codec => rubydebug
  }
}
----------------------------------

Using the HTTP poller with custom a custom CA or self signed cert.

If you have a self signed cert you will need to convert your server's certificate to a valid# `.jks` or `.p12` file. An easy way to do it is to run the following one-liner, substituting your server's URL for the placeholder `MYURL` and `MYPORT`.

[source,sh]
----------------------------------
openssl s_client -showcerts -connect MYURL:MYPORT </dev/null 2>/dev/null|openssl x509 -outform PEM > downloaded_cert.pem; keytool -import -alias test -file downloaded_cert.pem -keystore downloaded_truststore.jks
----------------------------------

The above snippet will create two files `downloaded_cert.pem` and `downloaded_truststore.jks`. You will be prompted to set a password for the `jks` file during this process. To configure logstash use a config like the one that follows.


[source,ruby]
----------------------------------
 http_poller {
   urls => {
     myurl => "https://myhostname:1234"
   }
   truststore => "/path/to/downloaded_truststore.jks"
   truststore_password => "mypassword"
   interval => 30
 }
----------------------------------

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
http_poller {
    interval => ...
    urls => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-http_poller-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-http_poller-automatic_retries>> |<<number,number>>|No|`1`
| <<plugins-inputs-http_poller-cacert>> |a valid filesystem path|No|
| <<plugins-inputs-http_poller-client_cert>> |a valid filesystem path|No|
| <<plugins-inputs-http_poller-client_key>> |a valid filesystem path|No|
| <<plugins-inputs-http_poller-codec>> |<<codec,codec>>|No|`"json"`
| <<plugins-inputs-http_poller-connect_timeout>> |<<number,number>>|No|`10`
| <<plugins-inputs-http_poller-cookies>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-http_poller-follow_redirects>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-http_poller-interval>> |<<number,number>>|Yes|
| <<plugins-inputs-http_poller-keepalive>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-http_poller-keystore>> |a valid filesystem path|No|
| <<plugins-inputs-http_poller-keystore_password>> |<<password,password>>|No|
| <<plugins-inputs-http_poller-keystore_type>> |<<string,string>>|No|`"JKS"`
| <<plugins-inputs-http_poller-metadata_target>> |<<string,string>>|No|`"@metadata"`
| <<plugins-inputs-http_poller-pool_max>> |<<number,number>>|No|`50`
| <<plugins-inputs-http_poller-pool_max_per_route>> |<<number,number>>|No|`25`
| <<plugins-inputs-http_poller-proxy>> |<<,>>|No|
| <<plugins-inputs-http_poller-request_timeout>> |<<number,number>>|No|`60`
| <<plugins-inputs-http_poller-retry_non_idempotent>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-http_poller-socket_timeout>> |<<number,number>>|No|`10`
| <<plugins-inputs-http_poller-ssl_certificate_validation>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-http_poller-tags>> |<<array,array>>|No|
| <<plugins-inputs-http_poller-target>> |<<string,string>>|No|
| <<plugins-inputs-http_poller-truststore>> |a valid filesystem path|No|
| <<plugins-inputs-http_poller-truststore_password>> |<<password,password>>|No|
| <<plugins-inputs-http_poller-truststore_type>> |<<string,string>>|No|`"JKS"`
| <<plugins-inputs-http_poller-type>> |<<string,string>>|No|
| <<plugins-inputs-http_poller-urls>> |<<hash,hash>>|Yes|
| <<plugins-inputs-http_poller-validate_after_inactivity>> |<<number,number>>|No|`200`
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-http_poller-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-http_poller-automatic_retries]]
===== `automatic_retries` 

  * Value type is <<number,number>>
  * Default value is `1`



[[plugins-inputs-http_poller-cacert]]
===== `cacert` 

  * Value type is <<path,path>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-client_cert]]
===== `client_cert` 

  * Value type is <<path,path>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-client_key]]
===== `client_key` 

  * Value type is <<path,path>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"json"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-http_poller-connect_timeout]]
===== `connect_timeout` 

  * Value type is <<number,number>>
  * Default value is `10`



[[plugins-inputs-http_poller-cookies]]
===== `cookies` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`



[[plugins-inputs-http_poller-follow_redirects]]
===== `follow_redirects` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`



[[plugins-inputs-http_poller-interval]]
===== `interval` 

  * This is a required setting.
  * Value type is <<number,number>>
  * There is no default value for this setting.

How often (in seconds) the urls will be called

[[plugins-inputs-http_poller-keepalive]]
===== `keepalive` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`



[[plugins-inputs-http_poller-keystore]]
===== `keystore` 

  * Value type is <<path,path>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-keystore_password]]
===== `keystore_password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-keystore_type]]
===== `keystore_type` 

  * Value type is <<string,string>>
  * Default value is `"JKS"`



[[plugins-inputs-http_poller-metadata_target]]
===== `metadata_target` 

  * Value type is <<string,string>>
  * Default value is `"@metadata"`

If you'd like to work with the request/response metadata.
Set this value to the name of the field you'd like to store a nested
hash of metadata.

[[plugins-inputs-http_poller-pool_max]]
===== `pool_max` 

  * Value type is <<number,number>>
  * Default value is `50`



[[plugins-inputs-http_poller-pool_max_per_route]]
===== `pool_max_per_route` 

  * Value type is <<number,number>>
  * Default value is `25`



[[plugins-inputs-http_poller-proxy]]
===== `proxy` 

  <li> Value type is <<string,string>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-request_timeout]]
===== `request_timeout` 

  * Value type is <<number,number>>
  * Default value is `60`



[[plugins-inputs-http_poller-retry_non_idempotent]]
===== `retry_non_idempotent` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-http_poller-socket_timeout]]
===== `socket_timeout` 

  * Value type is <<number,number>>
  * Default value is `10`



[[plugins-inputs-http_poller-ssl_certificate_validation]]
===== `ssl_certificate_validation` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`



[[plugins-inputs-http_poller-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-http_poller-target]]
===== `target` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Define the target field for placing the received data. If this setting is omitted, the data will be stored at the root (top level) of the event.

[[plugins-inputs-http_poller-truststore]]
===== `truststore` 

  * Value type is <<path,path>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-truststore_password]]
===== `truststore_password` 

  * Value type is <<password,password>>
  * There is no default value for this setting.



[[plugins-inputs-http_poller-truststore_type]]
===== `truststore_type` 

  * Value type is <<string,string>>
  * Default value is `"JKS"`



[[plugins-inputs-http_poller-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-http_poller-urls]]
===== `urls` 

  * This is a required setting.
  * Value type is <<hash,hash>>
  * There is no default value for this setting.

A Hash of urls in this format : `"name" => "url"`.
The name and the url will be passed in the outputed event

[[plugins-inputs-http_poller-validate_after_inactivity]]
===== `validate_after_inactivity` 

  * Value type is <<number,number>>
  * Default value is `200`




