[[plugins-inputs-rabbitmq]]
=== rabbitmq

Pull events from a http://www.rabbitmq.com/[RabbitMQ] queue.

The default settings will create an entirely transient queue and listen for all messages by default.
If you need durability or any other advanced settings, please set the appropriate options

This plugin uses the http://rubymarchhare.info/[March Hare] library
for interacting with the RabbitMQ server. Most configuration options
map directly to standard RabbitMQ and AMQP concepts. The
https://www.rabbitmq.com/amqp-0-9-1-reference.html[AMQP 0-9-1 reference guide]
and other parts of the RabbitMQ documentation are useful for deeper
understanding.

The properties of messages received will be stored in the
`[@metadata][rabbitmq_properties]` field if the `@metadata_enabled` setting is checked.
Note that storing metadata may degrade performance.
The following properties may be available (in most cases dependent on whether
they were set by the sender):

* app-id
* cluster-id
* consumer-tag
* content-encoding
* content-type
* correlation-id
* delivery-mode
* exchange
* expiration
* message-id
* priority
* redeliver
* reply-to
* routing-key
* timestamp
* type
* user-id

For example, to get the RabbitMQ message's timestamp property
into the Logstash event's `@timestamp` field, use the date
filter to parse the `[@metadata][rabbitmq_properties][timestamp]`
field:
[source,ruby]
   filter {
     if [@metadata][rabbitmq_properties][timestamp] {
       date {
         match => ["[@metadata][rabbitmq_properties][timestamp]", "UNIX"]
       }
     }
   }

Additionally, any message headers will be saved in the
`[@metadata][rabbitmq_headers]` field.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
rabbitmq {
    host => ...
    subscription_retry_interval_seconds => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-rabbitmq-ack>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-rabbitmq-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-rabbitmq-arguments>> |<<array,array>>|No|`{}`
| <<plugins-inputs-rabbitmq-auto_delete>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-automatic_recovery>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-rabbitmq-codec>> |<<codec,codec>>|No|`"json"`
| <<plugins-inputs-rabbitmq-connect_retry_interval>> |<<number,number>>|No|`1`
| <<plugins-inputs-rabbitmq-connection_timeout>> |<<number,number>>|No|
| <<plugins-inputs-rabbitmq-durable>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-exchange>> |<<string,string>>|No|
| <<plugins-inputs-rabbitmq-exclusive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-heartbeat>> |<<number,number>>|No|
| <<plugins-inputs-rabbitmq-host>> |<<string,string>>|Yes|
| <<plugins-inputs-rabbitmq-key>> |<<string,string>>|No|`"logstash"`
| <<plugins-inputs-rabbitmq-metadata_enabled>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-passive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-password>> |<<password,password>>|No|`"guest"`
| <<plugins-inputs-rabbitmq-port>> |<<number,number>>|No|`5672`
| <<plugins-inputs-rabbitmq-prefetch_count>> |<<number,number>>|No|`256`
| <<plugins-inputs-rabbitmq-queue>> |<<string,string>>|No|`""`
| <<plugins-inputs-rabbitmq-ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-subscription_retry_interval_seconds>> |<<number,number>>|Yes|`5`
| <<plugins-inputs-rabbitmq-tags>> |<<array,array>>|No|
| <<plugins-inputs-rabbitmq-threads>> |<<number,number>>|No|`1`
| <<plugins-inputs-rabbitmq-type>> |<<string,string>>|No|
| <<plugins-inputs-rabbitmq-user>> |<<string,string>>|No|`"guest"`
| <<plugins-inputs-rabbitmq-verify_ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-vhost>> |<<string,string>>|No|`"/"`
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-rabbitmq-ack]]
===== `ack` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Enable message acknowledgements. With acknowledgements
messages fetched by Logstash but not yet sent into the
Logstash pipeline will be requeued by the server if Logstash
shuts down. Acknowledgements will however hurt the message
throughput.

This will only send an ack back every `prefetch_count` messages.
Working in batches provides a performance boost here.

[[plugins-inputs-rabbitmq-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-rabbitmq-arguments]]
===== `arguments` 

  * Value type is <<array,array>>
  * Default value is `{}`

Extra queue arguments as an array.
To make a RabbitMQ queue mirrored, use: `{"x-ha-policy" => "all"}`

[[plugins-inputs-rabbitmq-auto_delete]]
===== `auto_delete` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Should the queue be deleted on the broker when the last consumer
disconnects? Set this option to `false` if you want the queue to remain
on the broker, queueing up messages until a consumer comes along to
consume them.

[[plugins-inputs-rabbitmq-automatic_recovery]]
===== `automatic_recovery` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Set this to automatically recover from a broken connection. You almost certainly don't want to override this!!!

[[plugins-inputs-rabbitmq-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"json"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-rabbitmq-connect_retry_interval]]
===== `connect_retry_interval` 

  * Value type is <<number,number>>
  * Default value is `1`

Time in seconds to wait before retrying a connection

[[plugins-inputs-rabbitmq-connection_timeout]]
===== `connection_timeout` 

  * Value type is <<number,number>>
  * There is no default value for this setting.

The default connection timeout in milliseconds. If not specified the timeout is infinite.

[[plugins-inputs-rabbitmq-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable or disable logging

[[plugins-inputs-rabbitmq-durable]]
===== `durable` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Is this queue durable? (aka; Should it survive a broker restart?)

[[plugins-inputs-rabbitmq-exchange]]
===== `exchange` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The name of the exchange to bind the queue to.

[[plugins-inputs-rabbitmq-exclusive]]
===== `exclusive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Is the queue exclusive? Exclusive queues can only be used by the connection
that declared them and will be deleted when it is closed (e.g. due to a Logstash
restart).

[[plugins-inputs-rabbitmq-heartbeat]]
===== `heartbeat` 

  * Value type is <<number,number>>
  * There is no default value for this setting.

Heartbeat delay in seconds. If unspecified no heartbeats will be sent

[[plugins-inputs-rabbitmq-host]]
===== `host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

RabbitMQ server address

[[plugins-inputs-rabbitmq-key]]
===== `key` 

  * Value type is <<string,string>>
  * Default value is `"logstash"`

The routing key to use when binding a queue to the exchange.
This is only relevant for direct or topic exchanges.

* Routing keys are ignored on fanout exchanges.
* Wildcards are not valid on direct exchanges.

[[plugins-inputs-rabbitmq-metadata_enabled]]
===== `metadata_enabled` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable the storage of message headers and properties in `@metadata`. This may impact performance

[[plugins-inputs-rabbitmq-passive]]
===== `passive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

If true the queue will be passively declared, meaning it must
already exist on the server. To have Logstash create the queue
if necessary leave this option as false. If actively declaring
a queue that already exists, the queue options for this plugin
(durable etc) must match those of the existing queue.

[[plugins-inputs-rabbitmq-password]]
===== `password` 

  * Value type is <<password,password>>
  * Default value is `"guest"`

RabbitMQ password

[[plugins-inputs-rabbitmq-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `5672`

RabbitMQ port to connect on

[[plugins-inputs-rabbitmq-prefetch_count]]
===== `prefetch_count` 

  * Value type is <<number,number>>
  * Default value is `256`

Prefetch count. If acknowledgements are enabled with the `ack` option, specifies the number of outstanding unacknowledged

[[plugins-inputs-rabbitmq-queue]]
===== `queue` 

  * Value type is <<string,string>>
  * Default value is `""`

The name of the queue Logstash will consume events from. If left empty, a transient queue with an randomly chosen name 
will be created.

[[plugins-inputs-rabbitmq-ssl]]
===== `ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable or disable SSL

[[plugins-inputs-rabbitmq-subscription_retry_interval_seconds]]
===== `subscription_retry_interval_seconds` 

  * This is a required setting.
  * Value type is <<number,number>>
  * Default value is `5`

Amount of time in seconds to wait after a failed subscription request
before retrying. Subscribes can fail if the server goes away and then comes back

[[plugins-inputs-rabbitmq-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-rabbitmq-threads]]
===== `threads` 

  * Value type is <<number,number>>
  * Default value is `1`



[[plugins-inputs-rabbitmq-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-rabbitmq-user]]
===== `user` 

  * Value type is <<string,string>>
  * Default value is `"guest"`

RabbitMQ username

[[plugins-inputs-rabbitmq-verify_ssl]]
===== `verify_ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Validate SSL certificate

[[plugins-inputs-rabbitmq-vhost]]
===== `vhost` 

  * Value type is <<string,string>>
  * Default value is `"/"`

The vhost to use. If you don't know what this is, leave the default.


