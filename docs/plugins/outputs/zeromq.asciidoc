[[plugins-outputs-zeromq]]
=== zeromq

NOTE: This is a community-maintained plugin!

Write events to a 0MQ PUB socket.

You need to have the 0mq 2.1.x library installed to be able to use
this output plugin.

The default settings will create a publisher connecting to a subscriber
bound to tcp://127.0.0.1:2120


&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
zeromq {
    topology => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-zeromq-address>> |<<array,array>>|No|`["tcp://127.0.0.1:2120"]`
| <<plugins-outputs-zeromq-codec>> |<<codec,codec>>|No|`"json"`
| <<plugins-outputs-zeromq-mode>> |<<string,string>>, one of `["server", "client"]`|No|`"client"`
| <<plugins-outputs-zeromq-sockopt>> |<<hash,hash>>|No|
| <<plugins-outputs-zeromq-topic>> |<<string,string>>|No|`""`
| <<plugins-outputs-zeromq-topology>> |<<string,string>>, one of `["pushpull", "pubsub", "pair"]`|Yes|
| <<plugins-outputs-zeromq-workers>> |<<number,number>>|No|`1`
|=======================================================================



==== Details

&nbsp;

[[plugins-outputs-zeromq-address]]
===== `address` 

  * Value type is <<array,array>>
  * Default value is `["tcp://127.0.0.1:2120"]`

0mq socket address to connect or bind.
Please note that `inproc://` will not work with logstashi.
For each we use a context per thread.
By default, inputs bind/listen and outputs connect.

[[plugins-outputs-zeromq-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"json"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-zeromq-mode]]
===== `mode` 

  * Value can be any of: `server`, `client`
  * Default value is `"client"`

Server mode binds/listens. Client mode connects.

[[plugins-outputs-zeromq-sockopt]]
===== `sockopt` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

This exposes zmq_setsockopt for advanced tuning.
See http://api.zeromq.org/2-1:zmq-setsockopt for details.

This is where you would set values like:

* ZMQ::HWM - high water mark
* ZMQ::IDENTITY - named queues
* ZMQ::SWAP_SIZE - space for disk overflow

Example:
[source,ruby]
    sockopt => {
       "ZMQ::HWM" => 50
       "ZMQ::IDENTITY"  => "my_named_queue"
    }

[[plugins-outputs-zeromq-topic]]
===== `topic` 

  * Value type is <<string,string>>
  * Default value is `""`

This is used for the 'pubsub' topology only.
On inputs, this allows you to filter messages by topic.
On outputs, this allows you to tag a message for routing.
NOTE: ZeroMQ does subscriber-side filtering
NOTE: Topic is evaluated with `event.sprintf` so macros are valid here.

[[plugins-outputs-zeromq-topology]]
===== `topology` 

  * This is a required setting.
  * Value can be any of: `pushpull`, `pubsub`, `pair`
  * There is no default value for this setting.

The default logstash topologies work as follows:

* pushpull - inputs are pull, outputs are push
* pubsub - inputs are subscribers, outputs are publishers
* pair - inputs are clients, inputs are servers

If the predefined topology flows don't work for you,
you can change the 'mode' setting

[[plugins-outputs-zeromq-workers]]
===== `workers` 

  * Value type is <<number,number>>
  * Default value is `1`

The number of workers to use for this output.
Note that this setting may not be useful for all outputs.


