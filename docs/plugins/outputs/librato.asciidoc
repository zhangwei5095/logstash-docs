[[plugins-outputs-librato]]
=== librato


NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/logstash-plugin install logstash-output-librato`.




&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
librato {
    account_id => ...
    api_token => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-librato-account_id>> |<<string,string>>|Yes|
| <<plugins-outputs-librato-annotation>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-librato-api_token>> |<<string,string>>|Yes|
| <<plugins-outputs-librato-batch_size>> |<<string,string>>|No|`"10"`
| <<plugins-outputs-librato-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-librato-counter>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-librato-gauge>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-librato-workers>> |<<number,number>>|No|`1`
|=======================================================================



==== Details

&nbsp;

[[plugins-outputs-librato-account_id]]
===== `account_id` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

This output lets you send metrics, annotations and alerts to
Librato based on Logstash events

This is VERY experimental and inefficient right now.
Your Librato account
usually an email address

[[plugins-outputs-librato-annotation]]
===== `annotation` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Annotations
Registers an annotation with Librato
The only required field is `title` and `name`.
`start_time` and `end_time` will be set to `event["@timestamp"].to_i`
You can add any other optional annotation values as well.
All values will be passed through `event.sprintf`

Example:
[source,ruby]
  {
      "title" => "Logstash event on %{host}"
      "name" => "logstash_stream"
  }
or
[source,ruby]
   {
      "title" => "Logstash event"
      "description" => "%{message}"
      "name" => "logstash_stream"
   }

[[plugins-outputs-librato-api_token]]
===== `api_token` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

Your Librato API Token

[[plugins-outputs-librato-batch_size]]
===== `batch_size` 

  * Value type is <<string,string>>
  * Default value is `"10"`

Batch size
Number of events to batch up before sending to Librato.


[[plugins-outputs-librato-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-librato-counter]]
===== `counter` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Counters
Send data to Librato as a counter

Example:
[source,ruby]
    {
        "value" => "1"
        "source" => "%{host}"
        "name" => "messages_received"
    }
    
Additionally, you can override the `measure_time` for the event. Must be a unix timestamp:
[source,ruby]
    {
        "value" => "1"
        "source" => "%{host}"
        "name" => "messages_received"
        "measure_time" => "%{my_unixtime_field}"
    }
Default is to use the event's timestamp

[[plugins-outputs-librato-gauge]]
===== `gauge` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Gauges
Send data to Librato as a gauge

Example:
[source,ruby]
    {
        "value" => "%{bytes_received}"
        "source" => "%{host}"
        "name" => "apache_bytes"
    }
Additionally, you can override the `measure_time` for the event. Must be a unix timestamp:
[source,ruby]
    {
        "value" => "%{bytes_received}"
        "source" => "%{host}"
        "name" => "apache_bytes"
        "measure_time" => "%{my_unixtime_field}
    }
Default is to use the event's timestamp

[[plugins-outputs-librato-workers]]
===== `workers` 

  * Value type is <<number,number>>
  * Default value is `1`

The number of workers to use for this output.
Note that this setting may not be useful for all outputs.


