[[plugins-outputs-loggly]]
=== loggly


NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/logstash-plugin install logstash-output-loggly`.


Got a loggly account? Use logstash to ship logs to Loggly!

This is most useful so you can use logstash to parse and structure
your logs and ship structured, json events to your account at Loggly.

To use this, you'll need to use a Loggly input with type 'http'
and 'json logging' enabled.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
loggly {
    key => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-loggly-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-loggly-host>> |<<string,string>>|No|`"logs-01.loggly.com"`
| <<plugins-outputs-loggly-key>> |<<string,string>>|Yes|
| <<plugins-outputs-loggly-proto>> |<<string,string>>|No|`"http"`
| <<plugins-outputs-loggly-proxy_host>> |<<string,string>>|No|
| <<plugins-outputs-loggly-proxy_password>> |<<password,password>>|No|`""`
| <<plugins-outputs-loggly-proxy_port>> |<<number,number>>|No|
| <<plugins-outputs-loggly-proxy_user>> |<<string,string>>|No|
| <<plugins-outputs-loggly-tag>> |<<string,string>>|No|`"logstash"`
| <<plugins-outputs-loggly-workers>> |<<number,number>>|No|`1`
|=======================================================================



==== Details

&nbsp;

[[plugins-outputs-loggly-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-loggly-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"logs-01.loggly.com"`

The hostname to send logs to. This should target the loggly http input
server which is usually "logs-01.loggly.com" (Gen2 account).
See Loggly HTTP endpoint documentation at
https://www.loggly.com/docs/http-endpoint/

[[plugins-outputs-loggly-key]]
===== `key` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The loggly http input key to send to.
This is usually visible in the Loggly 'Inputs' page as something like this:
....
    https://logs.hoover.loggly.net/inputs/abcdef12-3456-7890-abcd-ef0123456789
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                          \---------->   key   <-------------/
....
You can use `%{foo}` field lookups here if you need to pull the api key from
the event. This is mainly aimed at multitenant hosting providers who want
to offer shipping a customer's logs to that customer's loggly account.

[[plugins-outputs-loggly-proto]]
===== `proto` 

  * Value type is <<string,string>>
  * Default value is `"http"`

Should the log action be sent over https instead of plain http

[[plugins-outputs-loggly-proxy_host]]
===== `proxy_host` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Proxy Host

[[plugins-outputs-loggly-proxy_password]]
===== `proxy_password` 

  * Value type is <<password,password>>
  * Default value is `""`

Proxy Password

[[plugins-outputs-loggly-proxy_port]]
===== `proxy_port` 

  * Value type is <<number,number>>
  * There is no default value for this setting.

Proxy Port

[[plugins-outputs-loggly-proxy_user]]
===== `proxy_user` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Proxy Username

[[plugins-outputs-loggly-tag]]
===== `tag` 

  * Value type is <<string,string>>
  * Default value is `"logstash"`

Loggly Tag
Tag helps you to find your logs in the Loggly dashboard easily
You can make a search in Loggly using tag as "tag:logstash-contrib"
or the tag set by you in the config file.

You can use %{somefield} to allow for custom tag values.
Helpful for leveraging Loggly source groups.
https://www.loggly.com/docs/source-groups/

[[plugins-outputs-loggly-workers]]
===== `workers` 

  * Value type is <<number,number>>
  * Default value is `1`

The number of workers to use for this output.
Note that this setting may not be useful for all outputs.


